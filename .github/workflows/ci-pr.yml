name: CI - Pull Request

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]
  workflow_dispatch: # Allow manual triggering

jobs:

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.10
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Run unit tests
        run: pnpm --filter @usermaven/sdk-js test
      
      - name: Run unit tests with coverage
        run: pnpm --filter @usermaven/sdk-js test:coverage
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: packages/javascript-sdk/coverage/
          retention-days: 7

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.10
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      # Build the SDK first to ensure dist files are available
      - name: Build JavaScript SDK
        run: pnpm --filter @usermaven/sdk-js build
      
      # Install Playwright browsers
      - name: Install Playwright Browsers
        run: |
          cd packages/javascript-sdk
          # Install all browsers with dependencies
          npx playwright install --with-deps
      
      - name: Run E2E tests for JavaScript SDK
        run: pnpm --filter @usermaven/sdk-js test:e2e:ci
        env:
          CI: true
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: packages/javascript-sdk/playwright-report/
          retention-days: 7
      
      - name: Upload test videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-videos
          path: packages/javascript-sdk/test-results/
          retention-days: 7

  lint:
    name: Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.10
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Check code formatting
        run: pnpm --filter @usermaven/sdk-js format

  build:
    name: Build Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.10
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build project
        run: pnpm build
      
      - name: Build JavaScript SDK
        run: pnpm build:javascript

  all-checks-passed:
    name: All Checks Passed
    needs: [unit-tests, e2e-tests, lint, build]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Verify all checks passed
        run: |
          if [[ "${{ needs.unit-tests.result }}" != "success" || 
                "${{ needs.e2e-tests.result }}" != "success" || 
                "${{ needs.lint.result }}" != "success" || 
                "${{ needs.build.result }}" != "success" ]]; then
            echo "One or more checks failed"
            exit 1
          fi
          echo "All checks passed successfully!"